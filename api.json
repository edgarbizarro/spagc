{
    "openapi": "3.1.0",
    "info": {
        "title": "Spagc",
        "version": "1.0.0",
        "description": "A API gerencia estados, cidades, clusters (grupos de cidades), campanhas, produtos e descontos"
    },
    "servers": [
        {
            "url": "http://localhost/api",
            "description": "Local"
        },
        {
            "url": "https://domain.example/api",
            "description": "Prod"
        }
    ],
    "security": [
        {
            "http": []
        }
    ],
    "paths": {
        "/campaigns": {
            "get": {
                "operationId": "campaigns.index",
                "description": "Retorna uma lista de campanhas cadastradas.",
                "summary": "Listar campanhas",
                "tags": [
                    "Campaign"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "campaigns.store",
                "description": "Cria uma nova campanha promocional vinculada a um cluster.\nApenas uma campanha ativa por cluster \u00e9 permitida.",
                "summary": "Criar nova campanha",
                "tags": [
                    "Campaign"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCampaignRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 201
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/campaigns/{id}": {
            "get": {
                "operationId": "campaigns.show",
                "description": "Retorna os dados de uma campanha espec\u00edfica pelo ID.",
                "summary": "Visualizar campanha",
                "tags": [
                    "Campaign"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "campaigns.update",
                "description": "Atualiza os dados de uma campanha existente.",
                "summary": "Atualizar campanha",
                "tags": [
                    "Campaign"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCampaignRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "campaigns.destroy",
                "description": "Exclui uma campanha espec\u00edfica pelo ID.",
                "summary": "Remover campanha",
                "tags": [
                    "Campaign"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 204
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/campaigns/{campaignId}/products": {
            "get": {
                "operationId": "campaignProduct.index",
                "description": "Retorna os produtos vinculados a uma campanha espec\u00edfica.",
                "summary": "Listar produtos da campanha",
                "tags": [
                    "CampaignProduct"
                ],
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "campaignProduct.store",
                "description": "Associa um produto a uma campanha.",
                "summary": "Vincular produto \u00e0 campanha",
                "tags": [
                    "CampaignProduct"
                ],
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "product_id": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "product_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/campaigns/{campaignId}/products/{productId}": {
            "delete": {
                "operationId": "campaignProduct.destroy",
                "description": "Desassocia um produto de uma campanha espec\u00edfica.",
                "summary": "Remover produto da campanha",
                "tags": [
                    "CampaignProduct"
                ],
                "parameters": [
                    {
                        "name": "campaignId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cities": {
            "get": {
                "operationId": "cities.index",
                "description": "Retorna uma lista completa de cidades cadastradas, com seus respectivos estados e clusters.",
                "summary": "Listar todas as cidades",
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "cities.store",
                "description": "Cria uma nova cidade vinculada a um estado e a um cluster.",
                "summary": "Cadastrar uma nova cidade",
                "tags": [
                    "City"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 201
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/cities/{id}": {
            "get": {
                "operationId": "cities.show",
                "description": "Retorna os dados detalhados de uma cidade espec\u00edfica pelo ID.",
                "summary": "Visualizar uma cidade",
                "tags": [
                    "City"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "cities.update",
                "description": "Atualiza os dados de uma cidade espec\u00edfica.",
                "summary": "Atualizar uma cidade",
                "tags": [
                    "City"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "cities.destroy",
                "description": "Remove uma cidade existente pelo ID.",
                "summary": "Remover uma cidade",
                "tags": [
                    "City"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 204
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/clusters": {
            "get": {
                "operationId": "clusters.index",
                "description": "Retorna uma lista de todos os clusters cadastrados.",
                "summary": "Listar todos os clusters",
                "tags": [
                    "Cluster"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "clusters.store",
                "summary": "Cadastrar um novo cluster",
                "tags": [
                    "Cluster"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreClusterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 201
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/clusters/{id}": {
            "get": {
                "operationId": "clusters.show",
                "description": "Retorna os dados de um cluster espec\u00edfico pelo ID.",
                "summary": "Visualizar um cluster",
                "tags": [
                    "Cluster"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "clusters.update",
                "description": "Atualiza os dados de um cluster existente.",
                "summary": "Atualizar um cluster",
                "tags": [
                    "Cluster"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateClusterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "clusters.destroy",
                "description": "Remove um cluster existente pelo ID.",
                "summary": "Remover um cluster",
                "tags": [
                    "Cluster"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 204
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/discounts": {
            "get": {
                "operationId": "discounts.index",
                "description": "Retorna todos os descontos cadastrados no sistema.",
                "summary": "Listar descontos",
                "tags": [
                    "Discount"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "discounts.store",
                "description": "Cria um novo desconto para uma campanha existente.",
                "summary": "Criar novo desconto",
                "tags": [
                    "Discount"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDiscountRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 201
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/discounts/{id}": {
            "get": {
                "operationId": "discounts.show",
                "description": "Retorna os dados de um desconto espec\u00edfico.",
                "summary": "Visualizar desconto",
                "tags": [
                    "Discount"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "discounts.update",
                "description": "Atualiza os dados de um desconto existente.",
                "summary": "Atualizar desconto",
                "tags": [
                    "Discount"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDiscountRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "discounts.destroy",
                "description": "Remove um desconto existente pelo ID.",
                "summary": "Remover desconto",
                "tags": [
                    "Discount"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 204
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "operationId": "login.login",
                "summary": "Authenticate user",
                "tags": [
                    "Login"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "operationId": "login.logout",
                "summary": "Logout user",
                "tags": [
                    "Login"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "operationId": "products.index",
                "description": "Retorna todos os produtos cadastrados no sistema.",
                "summary": "Listar produtos",
                "tags": [
                    "Product"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "products.store",
                "description": "Cria um novo produto para ser vinculado a campanhas.",
                "summary": "Cadastrar produto",
                "tags": [
                    "Product"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 201
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "operationId": "products.show",
                "description": "Retorna os dados de um produto espec\u00edfico pelo ID.",
                "summary": "Visualizar produto",
                "tags": [
                    "Product"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "products.update",
                "description": "Atualiza os dados de um produto existente.",
                "summary": "Atualizar produto",
                "tags": [
                    "Product"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProductRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "products.destroy",
                "description": "Remove um produto existente pelo ID.",
                "summary": "Remover produto",
                "tags": [
                    "Product"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 204
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "operationId": "register.register",
                "summary": "Register a new user",
                "tags": [
                    "Register"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8
                                    },
                                    "document": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "individual",
                                            "business"
                                        ]
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "minLength": 8
                                    }
                                },
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "document",
                                    "type",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    }
                }
            }
        },
        "/states": {
            "get": {
                "operationId": "states.index",
                "description": "Retorna a lista completa dos estados cadastrados no sistema.",
                "summary": "Listar todos os estados",
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "states.store",
                "summary": "Cadastrar um novo estado",
                "tags": [
                    "State"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreStateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 201
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            }
        },
        "/states/{id}": {
            "get": {
                "operationId": "states.show",
                "description": "Retorna os dados de um estado espec\u00edfico pelo ID.",
                "summary": "Visualizar um estado",
                "tags": [
                    "State"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "states.update",
                "description": "Atualiza os dados de um estado existente.",
                "summary": "Atualizar um estado",
                "tags": [
                    "State"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateStateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 200
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                }
            },
            "delete": {
                "operationId": "states.destroy",
                "description": "Remove um estado pelo ID.",
                "summary": "Remover um estado",
                "tags": [
                    "State"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "example": 204
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "http": {
                "type": "http",
                "scheme": "bearer"
            }
        },
        "schemas": {
            "StoreCampaignRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "cluster_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "title",
                    "start_date",
                    "end_date",
                    "is_active",
                    "cluster_id"
                ],
                "title": "StoreCampaignRequest"
            },
            "StoreCityRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "state_id": {
                        "type": "integer"
                    },
                    "cluster_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "name",
                    "state_id",
                    "cluster_id"
                ],
                "title": "StoreCityRequest"
            },
            "StoreClusterRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "name"
                ],
                "title": "StoreClusterRequest"
            },
            "StoreDiscountRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "percentage",
                            "fixed"
                        ]
                    },
                    "value": {
                        "type": "number",
                        "minimum": 0
                    },
                    "campaign_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "type",
                    "value",
                    "campaign_id"
                ],
                "title": "StoreDiscountRequest"
            },
            "StoreProductRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "price": {
                        "type": "number",
                        "minimum": 0
                    },
                    "sku": {
                        "type": "string",
                        "maxLength": 100
                    }
                },
                "required": [
                    "name",
                    "price",
                    "sku"
                ],
                "title": "StoreProductRequest"
            },
            "StoreStateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "abbreviation": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                    }
                },
                "required": [
                    "name",
                    "abbreviation"
                ],
                "title": "StoreStateRequest"
            },
            "UpdateCampaignRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "cluster_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "title",
                    "start_date",
                    "end_date",
                    "is_active",
                    "cluster_id"
                ],
                "title": "UpdateCampaignRequest"
            },
            "UpdateCityRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "state_id": {
                        "type": "integer"
                    },
                    "cluster_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "name",
                    "state_id",
                    "cluster_id"
                ],
                "title": "UpdateCityRequest"
            },
            "UpdateClusterRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "name"
                ],
                "title": "UpdateClusterRequest"
            },
            "UpdateDiscountRequest": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "percentage",
                            "fixed"
                        ]
                    },
                    "value": {
                        "type": "number",
                        "minimum": 0
                    },
                    "campaign_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "type",
                    "value",
                    "campaign_id"
                ],
                "title": "UpdateDiscountRequest"
            },
            "UpdateProductRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "price": {
                        "type": "number",
                        "minimum": 0
                    },
                    "sku": {
                        "type": "string",
                        "maxLength": 100
                    }
                },
                "required": [
                    "name",
                    "price",
                    "sku"
                ],
                "title": "UpdateProductRequest"
            },
            "UpdateStateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "abbreviation": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 2
                    }
                },
                "required": [
                    "name",
                    "abbreviation"
                ],
                "title": "UpdateStateRequest"
            }
        },
        "responses": {
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Authorization error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}